<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprHBubble</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create

//Movement
numVX = 0;
numVY = 0;
numVYMax = 10;
numSpeed = 2;
numMove  = 0;

numJumpForce = 6;
numGravity   = 0.9;
bolGround    = place_meeting(x, y + 1, objSolid);

//Animation
numFace = 1;
bolSpin = true;
numAngleMax = 20;
numAngleAcl = 4;

//Create Mask
insMask = instance_create(x, y, objMaskBubble);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Movement

//Input
var keyLeft  = keyboard_check(ord('A'));
var keyRight = keyboard_check(ord('D'));
var keyJump  = keyboard_check_pressed(vk_space);

numMove = keyRight - keyLeft;

//Vertical Movement
bolGround  = place_meeting(x, y + 1, objSolid);

if (!bolGround) 
{
    numVY += numGravity// Gravity
    if (numVY &gt; numVYMax) numVY = numVYMax;
}
else
{
    //Jump
    if (keyJump) numVY -= numJumpForce;
}


//Horizontal Movement
numVX = numMove * numSpeed;


//Collision
var numVel = scrCollision(numVX, numVY, self, insMask, objSolid);

numVX = numVel[0];
numVY = numVel[1];


//Move
x += numVX;
y += numVY;

// Set position of ObjMask
scrSetFriend(x, y, insMask);
scrSetFriend(x, y, objFhaterGun);


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Animation

//Face
if (numMove != 0) numFace = numMove;

image_xscale = numFace;

// Spin
if (numMove != 0)
{
    if (bolSpin)
    {
        image_angle += numAngleAcl
        if (image_angle &gt; numAngleMax) bolSpin = false;
    }
    else
    {
        image_angle -= numAngleAcl
        if (image_angle  &lt; -numAngleMax) bolSpin = true;
    }
}
else
{
    image_angle = scrApproach(image_angle, 0, numAngleAcl);
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
